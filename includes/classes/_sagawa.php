<?php
//
// +----------------------------------------------------------------------+
// |zen-cart Open Source E-commerce                                       |
// +----------------------------------------------------------------------+
// | Copyright (c) 2003 The zen-cart developers                           |
// |                                                                      |
// | http://www.zen-cart.com/index.php                                    |
// |                                                                      |
// | Portions Copyright (c) 2003 osCommerce                               |
// +----------------------------------------------------------------------+
// | This source file is subject to version 2.0 of the GPL license,       |
// | that is bundled with this package in the file LICENSE, and is        |
// | available through the world-wide-web at the following url:           |
// | http://www.zen-cart.com/license/2_0.txt.                             |
// | If you did not receive a copy of the zen-cart license and are unable |
// | to obtain it through the world-wide-web, please send a note to       |
// | license@zen-cart.com so we can mail you a copy immediately.          |
// +----------------------------------------------------------------------+
/*
  $Id: _sagawa.php 525 2009-03-26 08:10:32Z makiya $

  Sagawa Shipping Calculator.
  Calculate shipping costs.

  2002/03/29 written by TAMURA Toshihiko (tamura@bitscope.co.jp)
  2003/04/10 modified for ms1
  2004/02/27 modified for ZenCart by HISASUE Takahiro ( hisa@flatz.jp )
  2023/03/18 Modified and updated for zencart v1.5.8 by pilou2/piloujp
 */
/*
    $rate = new _sagawa('sagawa','通常便');
    $rate->SetOrigin('北海道', 'JP');   // 北海道から
    $rate->SetDest('東京都', 'JP');     // 東京都まで
    $rate->SetWeight(10);           // kg
    $quote = $rate->GetQuote();
    print $quote['type'] . "<br>";
    print $quote['cost'] . "\n";
*/
class _Sagawa {
    var $quote;
    var $OriginZone;
    var $OriginCountryCode = 'JP';
    var $DestZone;
    var $DestCountryCode = 'JP';
    var $Weight = 0;
    var $Length = 0;
    var $Width  = 0;
    var $Height = 0;

    // コンストラクタ
    // $id:   module id
    // $titl: module name
    // $zone: 都道府県コード '01'～'47'
    // $country: country code
    function __construct($id, $title, $zone = NULL, $country = NULL) {
        $this->quote = array('id' => $id, 'title' => $title);
        if($zone) {
            $this->SetOrigin($zone, $country);
        }
    }
    // 発送元をセットする
    // $zone: 都道府県コード '01'～'47'
    // $country: country code
    function SetOrigin($zone, $country = NULL) {
        $this->OriginZone = $zone;
        if($country) {
            $this->OriginCountryCode = $country;
        }
    }
    function SetDest($zone, $country = NULL) {
        $this->DestZone = $zone;
        if($country) {
            $this->DestCountryCode = $country;
        }
    }
    function SetWeight($weight) {
        //$this->Weight = $weight;
        $this->Weight = $weight;
    }
    function SetSize($length = NULL, $width = NULL, $height = NULL) {
        if($length) {
            $this->Length = $length;
        }
        if($width) {
            $this->Width = $width;
        }
        if($height) {
            $this->Height = $height;
        }
    }
    // サイズ区分(0～4)を返す
    // 規格外の場合は9を返す
    //
    // 区分  サイズ名  ３辺計   重量
    // ----------------------------------
    // 0     60サイズ  60cmまで  2kgまで
    // 1     80サイズ  80cmまで  5kgまで
    // 2    100サイズ 100cmまで 10kgまで
    // 3    140サイズ 140cmまで 20kgまで
    // 4    160サイズ 160cmまで 30kgまで
    // 5    180サイズ 180cmまで 40kgまで
    // 6    200サイズ 200cmまで 50kgまで
    // 7    220サイズ 220cmまで 50kgまで
    // 8    240サイズ 240cmまで 50kgまで
    // 9    規格外  
    function GetSizeClass() {
        $a_classes = array(
            array(0,  60,  2),  // 区分,３辺計,重量
            array(1,  80,  5),
            array(2, 100, 10),
            array(3, 140, 20),
            array(4, 160, 30),
            array(5, 170, 50),
            array(6, 180, 50),
            array(7, 200, 50),
            array(8, 220, 50),
            array(9, 240, 50),
            array(10, 260, 50)
        );

        $n_totallength = $this->Length + $this->Width + $this->Height;

        //while (list($n_index, $a_limit) = each($a_classes)) {
        foreach ($a_classes as $n_index => $a_limit) {
            if ($n_totallength <= $a_limit[1] && $this->Weight <= $a_limit[2]) {
                return $a_limit[0];
            }
        }
        return -1;  // 規格外
    }
    // 送付元と送付先からキーを作成する
    //
    function GetDistKey() {
        $s_key = '';
        $s_z1 = $this->GetLZone($this->OriginZone);
        $s_z2 = $this->GetLZone($this->DestZone);
        if ( $s_z1 && $s_z2 ) {
            // 地帯コードをアルファベット順に連結する
            if ( ord($s_z1) < ord($s_z2) ) {
                $s_key = $s_z1 . $s_z2;
            } else {
                $s_key = $s_z2 . $s_z1;
            }
        }
        return $s_key;
    }
    // 都道府県コードから地帯コードを取得する
    // $zone: 都道府県コード
    function GetLZone($zone) {
        // 都道府県コードを地帯コード('A'～'M')に変換する
        //  北海道:'A' = 北海道
        //  北東北:'B' = 青森県,岩手県,秋田県
        //  南東北:'C' = 宮城県,山形県,福島県
        //  関東  :'D' = 茨城県,栃木県,群馬県,埼玉県,千葉県,東京都,神奈川県,山梨県
        //  信越  :'E' = 新潟県,長野県
        //  東海  :'F' = 岐阜県,静岡県,愛知県,三重県
        //  北陸  :'G' = 富山県,石川県,福井県
        //  関西  :'H' = 滋賀県,京都府,大阪府,兵庫県,奈良県,和歌山県
        //  中国  :'I' = 鳥取県,島根県,岡山県,広島県,山口県
        //  四国  :'J' = 徳島県,香川県,愛媛県,高知県
        //  北九州:'K' = 福岡県,佐賀県,長崎県,大分県
        //  南九州:'L' = 熊本県,宮崎県,鹿児島県
        //  沖縄  :'M' = 沖縄県 (通常便は配達区域外)
        $a_zonemap = array(
        '北海道'=>'A',
        '青森県'=>'B',
        '岩手県'=>'B',
        '宮城県'=>'C',
        '秋田県'=>'B',
        '山形県'=>'C',
        '福島県'=>'C',
        '茨城県'=>'D',
        '栃木県'=>'D',
        '群馬県'=>'D',
        '埼玉県'=>'D',
        '千葉県'=>'D',
        '東京都'=>'D',
        '神奈川県'=>'D',
        '新潟県'=>'E',
        '富山県'=>'G',
        '石川県'=>'G',
        '福井県'=>'G',
        '山梨県'=>'D',
        '長野県'=>'E',
        '岐阜県'=>'F',
        '静岡県'=>'F',
        '愛知県'=>'F',
        '三重県'=>'F',
        '滋賀県'=>'H',
        '京都府'=>'H',
        '大阪府'=>'H',
        '兵庫県'=>'H',
        '奈良県'=>'H',
        '和歌山県'=>'H',
        '鳥取県'=>'I',
        '島根県'=>'I',
        '岡山県'=>'I',
        '広島県'=>'I',
        '山口県'=>'I',
        '徳島県'=>'J',
        '香川県'=>'J',
        '愛媛県'=>'J',
        '高知県'=>'J',
        '福岡県'=>'K',
        '佐賀県'=>'K',
        '長崎県'=>'K',
        '熊本県'=>'L',
        '大分県'=>'K',
        '宮崎県'=>'L',
        '鹿児島県'=>'L',
        '沖縄県'=>'M'
        );
        return $a_zonemap[$zone];
    }

    function GetQuote() {
        // 距離別の価格ランク: ランクコード => 価格(60,80,100,140,160,170,180,200,220)
        // 地帯 - 地帯間の価格ランク 沖縄から
        $a_dist_to_rank = array(
        'AA'=>'N01',
        'AB'=>'N31','BB'=>'N01',
        'AC'=>'N35','BC'=>'N01','CC'=>'N01',
        'AD'=>'N42','BD'=>'N21','CD'=>'N09','DD'=>'N01',
        'AE'=>'N44','BE'=>'N21','CE'=>'N09','DE'=>'N08','EE'=>'N01',
        'AF'=>'N47','BF'=>'N30','CF'=>'N18','DF'=>'N08','EF'=>'N06','FF'=>'N01',
        'AG'=>'N47','BG'=>'N30','CG'=>'N18','DG'=>'N08','EG'=>'N06','FG'=>'N03','GG'=>'N01',
        'AH'=>'N53','BH'=>'N34','CH'=>'N28','DH'=>'N17','EH'=>'N12','FH'=>'N03','GH'=>'N02','HH'=>'N01',
        'AI'=>'N54','BI'=>'N43','CI'=>'N37','DI'=>'N27','EI'=>'N26','FI'=>'N15','GI'=>'N16','HI'=>'N04','II'=>'N01',
        'AJ'=>'N55','BJ'=>'N46','CJ'=>'N45','DJ'=>'N33','EJ'=>'N32','FJ'=>'N22','GJ'=>'N23','HJ'=>'N11','IJ'=>'N10','JJ'=>'N01',
        'AK'=>'N56','BK'=>'N49','CK'=>'N48','DK'=>'N38','EK'=>'N36','FK'=>'N24','GK'=>'N25','HK'=>'N14','IK'=>'N05','JK'=>'N13','KK'=>'N01',
        'AL'=>'N57','BL'=>'N51','CL'=>'N50','DL'=>'N41','EL'=>'N40','FL'=>'N28','GL'=>'N29','HL'=>'N20','IL'=>'N07','JL'=>'N19','KL'=>'N02','LL'=>'N01',
        'AM'=>'N52','BM'=>'N51','CM'=>'N50','DM'=>'N41','EM'=>'N39','FM'=>'N28','GM'=>'N29','HM'=>'N20','IM'=>'N07','JM'=>'N19','KM'=>'N02','LM'=>'N01','MM'=>'N01'
        );
        // 距離別の価格ランク: ランクコード => 価格(60,80,100,140,160,180,200,220,240,260) 2023-03 prices HT 沖縄から https://www.sagawa-exp.co.jp/send/fare/attention.html
        $a_pricerank = array(
        'N01'=>array(700,950,1260,1680,1880,2200,2450,2950,3450,4450,5450),
        'N02'=>array(700,950,1260,1680,1880,2300,2450,2950,3450,4450,5450),
        'N03'=>array(700,950,1260,1680,1880,2350,2500,2950,3450,4450,5450),
        'N04'=>array(700,950,1260,1680,1880,2400,2550,3050,3500,4500,5450),
        'N05'=>array(700,950,1260,1680,1880,2400,2600,3050,3550,4550,5550),
        'N06'=>array(700,950,1260,1680,1880,2450,2650,3150,3700,4700,5750),
        'N07'=>array(700,950,1260,1680,1880,2750,3000,3650,4300,5550,6850),
        'N08'=>array(700,950,1260,1680,1880,2850,3100,3800,4450,5800,7150),
        'N09'=>array(700,950,1260,1680,1880,2900,3200,3900,4600,6000,7400),
        'N10'=>array(800,1050,1360,1780,1980,2300,2550,3050,3550,4550,5550),
        'N11'=>array(800,1050,1360,1780,1980,2400,2550,3050,3550,4550,5550),
        'N12'=>array(800,1050,1360,1780,1980,2500,2700,3250,3800,4900,5950),
        'N13'=>array(800,1050,1360,1780,1980,2550,2750,3993,3850,4900,6000),
        'N14'=>array(800,1050,1360,1780,1980,2650,2850,3450,4000,5200,6350),
        'N15'=>array(800,1050,1360,1780,1980,2650,2900,3500,4100,5300,6500),
        'N16'=>array(800,1050,1360,1780,1980,2750,3000,3600,4250,5500,6750),
        'N17'=>array(800,1050,1360,1780,1980,2850,3100,3800,4450,5800,7150),
        'N18'=>array(800,1050,1360,1780,1980,2900,3200,3900,4600,6000,7400),
        'N19'=>array(800,1050,1360,1780,1980,2950,3200,3900,4600,6000,7450),
        'N20'=>array(800,1050,1360,1780,1980,2950,3250,4000,4700,6150,7600),
        'N21'=>array(800,1050,1360,1780,1980,3100,3400,4150,4900,6450,8000),
        'N22'=>array(900,1150,1460,1880,2080,2650,2900,3500,4100,5300,6500),
        'N23'=>array(900,1150,1460,1880,2080,2750,3000,3600,4250,5500,6750),
        'N24'=>array(900,1150,1460,1880,2080,2850,3100,3750,4450,5750,7100),
        'N25'=>array(900,1150,1460,1880,2080,2900,3200,3850,4550,5950,7350),
        'N26'=>array(900,1150,1460,1880,2080,2950,3250,3950,4650,6100,7500),
        'N27'=>array(900,1150,1460,1880,2080,3100,3400,4150,4900,6450,8000),
        'N28'=>array(900,1150,1460,1880,2080,3150,3500,4300,5050,6650,8250),
        'N29'=>array(900,1150,1460,1880,2080,3150,3500,4300,5100,6700,8300),
        'N30'=>array(900,1150,1460,1880,2080,3200,3500,4350,5150,6750,8350),
        'N31'=>array(900,1150,1460,1880,2080,3450,3800,4700,6150,7600,9250),
        'N32'=>array(1000,1250,1560,1980,2180,2950,3250,3950,4650,6100,7500),
        'N33'=>array(1000,1250,1560,1980,2180,3100,3400,4150,4950,6450,8000),
        'N34'=>array(1000,1250,1560,1980,2180,3500,3900,4850,5800,7700,9550),
        'N35'=>array(1000,1250,1560,1980,2180,3500,3900,4850,6250,7700,9600),
        'N36'=>array(1100,1350,1660,2080,2280,3200,3550,4400,5200,6850,8500),
        'N37'=>array(1100,1350,1660,2080,2280,3350,3700,4600,5450,7200,8950),
        'N38'=>array(1100,1350,1660,2080,2280,3300,3650,4550,5400,7100,8800),
        'N39'=>array(1100,1350,1660,2080,2280,3400,3740,4700,5600,7400,9150),
        'N40'=>array(1100,1350,1660,2080,2280,3400,3800,4700,5600,7400,9150),
        'N41'=>array(1100,1350,1660,2080,2280,3600,4000,5000,5950,7900,9850),
        'N42'=>array(1100,1350,1660,2080,2280,3600,4050,5000,6350,7950,9950),
        'N43'=>array(1100,1350,1660,2080,2280,3700,4100,5150,6150,8150,10200),
        'N44'=>array(1100,1350,1660,2080,2280,3900,4350,5450,6550,8750,10950),
        'N45'=>array(1200,1450,1760,2180,2380,3350,3700,4600,5450,7200,8950),
        'N46'=>array(1200,1450,1760,2180,2380,3700,4100,5150,6150,8150,10200),
        'N47'=>array(1200,1450,1760,2180,2380,4050,4550,5700,6850,9150,11450),
        'N48'=>array(1300,1550,1860,2280,2480,3650,4100,5100,6050,8050,10050),
        'N49'=>array(1300,1550,1860,2280,2480,4100,4600,5750,6900,9400,11650),
        'N50'=>array(1300,1550,1860,2280,2480,4100,4650,5800,7000,9350,11700),
        'N51'=>array(1300,1550,1860,2280,2480,4350,4900,6600,7450,10000,13050),
        'N52'=>array(1300,1550,1860,2280,2480,5050,5750,7300,8850,11950,15050),
        'N53'=>array(1400,1650,1960,2380,2580,4150,4650,5850,7050,9400,11800),
        'N54'=>array(1500,1750,2060,2480,2680,4600,5200,6550,7900,10650,13400),
        'N55'=>array(1600,1850,2160,2580,2780,4600,5200,6600,7950,10700,13450),
        'N56'=>array(1700,1950,2260,2680,2880,4850,5500,6950,8400,11350,14250),
        'N57'=>array(1700,1950,2260,2680,2880,5050,5750,7300,8850,11950,15050)
        );   

        $s_key = $this->GetDistKey();
        if ( $s_key ) {
            $s_rank = $a_dist_to_rank[$s_key];
            if ( $s_rank ) {
                $n_sizeclass = $this->GetSizeClass();
                if ($n_sizeclass < 0) {
                    $this->quote['error'] = MODULE_SHIPPING_SAGAWA_TEXT_OVERSIZE;
                } else {
                    $this->quote['cost'] = $a_pricerank[$s_rank][$n_sizeclass];
                }
              //$this->quote['DEBUG'] = ' zone=' . $this->OriginZone . '=>' . $this->DestZone   //DEBUG
              //              . ' cost=' . $a_pricerank[$s_rank][$n_sizeclass];           //DEBUG
            } else {
                $this->quote['error'] = MODULE_SHIPPING_SAGAWA_TEXT_OUT_OF_AREA . '(' . $s_key .')';
            }
        } else {
            $this->quote['error'] = MODULE_SHIPPING_SAGAWA_TEXT_ILLEGAL_ZONE . '(' . $this->OriginZone . '=>' . $this->DestZone . ')';
        }
        return $this->quote;
    }
}
?>
